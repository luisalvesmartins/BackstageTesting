{"version":3,"file":"parseQueryEntitiesParams.cjs.js","sources":["../../../src/service/request/parseQueryEntitiesParams.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  QueryEntitiesCursorRequest,\n  QueryEntitiesInitialRequest,\n  QueryEntitiesRequest,\n} from '../../catalog/types';\nimport { decodeCursor } from '../util';\nimport { parseEntityFilterParams } from './parseEntityFilterParams';\nimport { parseEntityOrderFieldParams } from './parseEntityOrderFieldParams';\nimport { parseEntityTransformParams } from './parseEntityTransformParams';\nimport { spec } from '../../schema/openapi.generated';\nimport { internal } from '@backstage/backend-openapi-utils';\n\nexport function parseQueryEntitiesParams(\n  params: internal.QuerySchema<typeof spec, '/entities/by-query', 'get'>,\n): Omit<QueryEntitiesRequest, 'credentials' | 'limit'> {\n  const fields = parseEntityTransformParams(params);\n\n  if (params.cursor) {\n    const decodedCursor = decodeCursor(params.cursor);\n    const response: Omit<QueryEntitiesCursorRequest, 'credentials'> = {\n      cursor: decodedCursor,\n      fields,\n    };\n    return response;\n  }\n\n  const filter = parseEntityFilterParams(params);\n  const orderFields = parseEntityOrderFieldParams(params);\n\n  const response: Omit<QueryEntitiesInitialRequest, 'credentials'> = {\n    fields,\n    filter,\n    orderFields,\n    fullTextFilter: {\n      term: params.fullTextFilterTerm || '',\n      fields: params.fullTextFilterFields,\n    },\n  };\n\n  return response;\n}\n"],"names":["parseEntityTransformParams","decodeCursor","response","parseEntityFilterParams","parseEntityOrderFieldParams"],"mappings":";;;;;;;AA4BO,SAAS,yBACd,MACqD,EAAA;AACrD,EAAM,MAAA,MAAA,GAASA,sDAA2B,MAAM,CAAA,CAAA;AAEhD,EAAA,IAAI,OAAO,MAAQ,EAAA;AACjB,IAAM,MAAA,aAAA,GAAgBC,iBAAa,CAAA,MAAA,CAAO,MAAM,CAAA,CAAA;AAChD,IAAA,MAAMC,SAA4D,GAAA;AAAA,MAChE,MAAQ,EAAA,aAAA;AAAA,MACR,MAAA;AAAA,KACF,CAAA;AACA,IAAOA,OAAAA,SAAAA,CAAAA;AAAA,GACT;AAEA,EAAM,MAAA,MAAA,GAASC,gDAAwB,MAAM,CAAA,CAAA;AAC7C,EAAM,MAAA,WAAA,GAAcC,wDAA4B,MAAM,CAAA,CAAA;AAEtD,EAAA,MAAM,QAA6D,GAAA;AAAA,IACjE,MAAA;AAAA,IACA,MAAA;AAAA,IACA,WAAA;AAAA,IACA,cAAgB,EAAA;AAAA,MACd,IAAA,EAAM,OAAO,kBAAsB,IAAA,EAAA;AAAA,MACnC,QAAQ,MAAO,CAAA,oBAAA;AAAA,KACjB;AAAA,GACF,CAAA;AAEA,EAAO,OAAA,QAAA,CAAA;AACT;;;;"}