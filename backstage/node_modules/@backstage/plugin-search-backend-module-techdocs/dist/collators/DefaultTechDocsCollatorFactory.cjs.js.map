{"version":3,"file":"DefaultTechDocsCollatorFactory.cjs.js","sources":["../../src/collators/DefaultTechDocsCollatorFactory.ts"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createLegacyAuthAdapters,\n  TokenManager,\n} from '@backstage/backend-common';\nimport {\n  CATALOG_FILTER_EXISTS,\n  CatalogApi,\n  CatalogClient,\n} from '@backstage/catalog-client';\nimport {\n  Entity,\n  parseEntityRef,\n  RELATION_OWNED_BY,\n  stringifyEntityRef,\n} from '@backstage/catalog-model';\nimport { Config } from '@backstage/config';\nimport { catalogEntityReadPermission } from '@backstage/plugin-catalog-common/alpha';\nimport { Permission } from '@backstage/plugin-permission-common';\nimport { DocumentCollatorFactory } from '@backstage/plugin-search-common';\nimport { TechDocsDocument } from '@backstage/plugin-techdocs-node';\nimport fetch from 'node-fetch';\nimport pLimit from 'p-limit';\nimport { Readable } from 'stream';\nimport { TechDocsCollatorEntityTransformer } from './TechDocsCollatorEntityTransformer';\nimport {\n  MkSearchIndexDoc,\n  TechDocsCollatorDocumentTransformer,\n} from './TechDocsCollatorDocumentTransformer';\nimport { defaultTechDocsCollatorEntityTransformer } from './defaultTechDocsCollatorEntityTransformer';\nimport { defaultTechDocsCollatorDocumentTransformer } from './defaultTechDocsCollatorDocumentTransformer';\nimport {\n  AuthService,\n  DiscoveryService,\n  HttpAuthService,\n  LoggerService,\n} from '@backstage/backend-plugin-api';\n\n/**\n * Options to configure the TechDocs collator factory\n *\n * @public\n * @deprecated This type is deprecated along with the {@link DefaultTechDocsCollatorFactory}.\n */\nexport type TechDocsCollatorFactoryOptions = {\n  discovery: DiscoveryService;\n  logger: LoggerService;\n  tokenManager?: TokenManager;\n  auth?: AuthService;\n  httpAuth?: HttpAuthService;\n  locationTemplate?: string;\n  catalogClient?: CatalogApi;\n  parallelismLimit?: number;\n  legacyPathCasing?: boolean;\n  entityTransformer?: TechDocsCollatorEntityTransformer;\n  documentTransformer?: TechDocsCollatorDocumentTransformer;\n};\n\ntype EntityInfo = {\n  name: string;\n  namespace: string;\n  kind: string;\n};\n\n/**\n * A search collator factory responsible for gathering and transforming\n * TechDocs documents.\n *\n * @public\n * @deprecated Migrate to the {@link https://backstage.io/docs/backend-system/building-backends/migrating | new backend system} and install this collator via module instead (see {@link https://github.com/backstage/backstage/blob/nbs10/search-deprecate-create-router/plugins/search-backend-module-techdocs/README.md#installation | here} for more installation details).\n */\nexport class DefaultTechDocsCollatorFactory implements DocumentCollatorFactory {\n  public readonly type: string = 'techdocs';\n  public readonly visibilityPermission: Permission =\n    catalogEntityReadPermission;\n\n  private discovery: DiscoveryService;\n  private locationTemplate: string;\n  private readonly logger: LoggerService;\n  private readonly auth: AuthService;\n  private readonly catalogClient: CatalogApi;\n  private readonly parallelismLimit: number;\n  private readonly legacyPathCasing: boolean;\n  private entityTransformer: TechDocsCollatorEntityTransformer;\n  private documentTransformer: TechDocsCollatorDocumentTransformer;\n\n  private constructor(options: TechDocsCollatorFactoryOptions) {\n    this.discovery = options.discovery;\n    this.locationTemplate =\n      options.locationTemplate || '/docs/:namespace/:kind/:name/:path';\n    this.logger = options.logger.child({ documentType: this.type });\n    this.catalogClient =\n      options.catalogClient ||\n      new CatalogClient({ discoveryApi: options.discovery });\n    this.parallelismLimit = options.parallelismLimit ?? 10;\n    this.legacyPathCasing = options.legacyPathCasing ?? false;\n    this.entityTransformer = options.entityTransformer ?? (() => ({}));\n    this.documentTransformer = options.documentTransformer ?? (() => ({}));\n\n    this.auth = createLegacyAuthAdapters({\n      auth: options.auth,\n      discovery: options.discovery,\n      tokenManager: options.tokenManager,\n    }).auth;\n  }\n\n  static fromConfig(config: Config, options: TechDocsCollatorFactoryOptions) {\n    const legacyPathCasing =\n      config.getOptionalBoolean(\n        'techdocs.legacyUseCaseSensitiveTripletPaths',\n      ) || false;\n    const locationTemplate = config.getOptionalString(\n      'search.collators.techdocs.locationTemplate',\n    );\n    const parallelismLimit = config.getOptionalNumber(\n      'search.collators.techdocs.parallelismLimit',\n    );\n    return new DefaultTechDocsCollatorFactory({\n      ...options,\n      locationTemplate,\n      parallelismLimit,\n      legacyPathCasing,\n    });\n  }\n\n  async getCollator(): Promise<Readable> {\n    return Readable.from(this.execute());\n  }\n\n  private async *execute(): AsyncGenerator<TechDocsDocument, void, undefined> {\n    const limit = pLimit(this.parallelismLimit);\n    const techDocsBaseUrl = await this.discovery.getBaseUrl('techdocs');\n\n    let entitiesRetrieved = 0;\n    let moreEntitiesToGet = true;\n\n    // Offset/limit pagination is used on the Catalog Client in order to\n    // limit (and allow some control over) memory used by the search backend\n    // at index-time. The batchSize is calculated as a factor of the given\n    // parallelism limit to simplify configuration.\n    const batchSize = this.parallelismLimit * 50;\n    while (moreEntitiesToGet) {\n      const { token: catalogToken } = await this.auth.getPluginRequestToken({\n        onBehalfOf: await this.auth.getOwnServiceCredentials(),\n        targetPluginId: 'catalog',\n      });\n\n      const entities = (\n        await this.catalogClient.getEntities(\n          {\n            filter: {\n              'metadata.annotations.backstage.io/techdocs-ref':\n                CATALOG_FILTER_EXISTS,\n            },\n            limit: batchSize,\n            offset: entitiesRetrieved,\n          },\n          { token: catalogToken },\n        )\n      ).items;\n\n      // Control looping through entity batches.\n      moreEntitiesToGet = entities.length === batchSize;\n      entitiesRetrieved += entities.length;\n\n      const docPromises = entities\n        .filter(it => it.metadata?.annotations?.['backstage.io/techdocs-ref'])\n        .map((entity: Entity) =>\n          limit(async (): Promise<TechDocsDocument[]> => {\n            const entityInfo =\n              DefaultTechDocsCollatorFactory.handleEntityInfoCasing(\n                this.legacyPathCasing,\n                {\n                  kind: entity.kind,\n                  namespace: entity.metadata.namespace || 'default',\n                  name: entity.metadata.name,\n                },\n              );\n\n            try {\n              const { token: techdocsToken } =\n                await this.auth.getPluginRequestToken({\n                  onBehalfOf: await this.auth.getOwnServiceCredentials(),\n                  targetPluginId: 'techdocs',\n                });\n\n              const searchIndexResponse = await fetch(\n                DefaultTechDocsCollatorFactory.constructDocsIndexUrl(\n                  techDocsBaseUrl,\n                  entityInfo,\n                ),\n                {\n                  headers: {\n                    Authorization: `Bearer ${techdocsToken}`,\n                  },\n                },\n              );\n\n              // todo(@backstage/techdocs-core): remove Promise.race() when node-fetch is 3.x+\n              // workaround for fetch().json() hanging in node-fetch@2.x.x, fixed in 3.x.x\n              // https://github.com/node-fetch/node-fetch/issues/665\n              const searchIndex = await Promise.race([\n                searchIndexResponse.json(),\n                new Promise((_resolve, reject) => {\n                  setTimeout(() => {\n                    reject('Could not parse JSON in 5 seconds.');\n                  }, 5000);\n                }),\n              ]);\n\n              return searchIndex.docs.map((doc: MkSearchIndexDoc) => ({\n                ...defaultTechDocsCollatorEntityTransformer(entity),\n                ...defaultTechDocsCollatorDocumentTransformer(doc),\n                ...this.entityTransformer(entity),\n                ...this.documentTransformer(doc),\n                location: this.applyArgsToFormat(\n                  this.locationTemplate || '/docs/:namespace/:kind/:name/:path',\n                  {\n                    ...entityInfo,\n                    path: doc.location,\n                  },\n                ),\n                ...entityInfo,\n                entityTitle: entity.metadata.title,\n                componentType: entity.spec?.type?.toString() || 'other',\n                lifecycle: (entity.spec?.lifecycle as string) || '',\n                owner: getSimpleEntityOwnerString(entity),\n                authorization: {\n                  resourceRef: stringifyEntityRef(entity),\n                },\n              }));\n            } catch (e) {\n              this.logger.debug(\n                `Failed to retrieve tech docs search index for entity ${entityInfo.namespace}/${entityInfo.kind}/${entityInfo.name}`,\n                e,\n              );\n              return [];\n            }\n          }),\n        );\n      yield* (await Promise.all(docPromises)).flat();\n    }\n  }\n\n  private applyArgsToFormat(\n    format: string,\n    args: Record<string, string>,\n  ): string {\n    let formatted = format;\n    for (const [key, value] of Object.entries(args)) {\n      formatted = formatted.replace(`:${key}`, value);\n    }\n    return formatted;\n  }\n\n  private static constructDocsIndexUrl(\n    techDocsBaseUrl: string,\n    entityInfo: { kind: string; namespace: string; name: string },\n  ) {\n    return `${techDocsBaseUrl}/static/docs/${entityInfo.namespace}/${entityInfo.kind}/${entityInfo.name}/search/search_index.json`;\n  }\n\n  private static handleEntityInfoCasing(\n    legacyPaths: boolean,\n    entityInfo: EntityInfo,\n  ): EntityInfo {\n    return legacyPaths\n      ? entityInfo\n      : Object.entries(entityInfo).reduce((acc, [key, value]) => {\n          return { ...acc, [key]: value.toLocaleLowerCase('en-US') };\n        }, {} as EntityInfo);\n  }\n}\n\nfunction getSimpleEntityOwnerString(entity: Entity): string {\n  if (entity.relations) {\n    const owner = entity.relations.find(r => r.type === RELATION_OWNED_BY);\n    if (owner) {\n      const { name } = parseEntityRef(owner.targetRef);\n      return name;\n    }\n  }\n  return '';\n}\n"],"names":["catalogEntityReadPermission","CatalogClient","createLegacyAuthAdapters","Readable","pLimit","CATALOG_FILTER_EXISTS","fetch","defaultTechDocsCollatorEntityTransformer","defaultTechDocsCollatorDocumentTransformer","stringifyEntityRef","RELATION_OWNED_BY","parseEntityRef"],"mappings":"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"}