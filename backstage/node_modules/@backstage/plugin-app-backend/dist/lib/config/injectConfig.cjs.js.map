{"version":3,"file":"injectConfig.cjs.js","sources":["../../../src/lib/config/injectConfig.ts"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { injectConfigIntoHtml } from './injectConfigIntoHtml';\nimport { injectConfigIntoStatic } from './injectConfigIntoStatic';\nimport { InjectOptions } from './types';\n\n/**\n * Injects configs into the app bundle, replacing any existing injected config.\n * @internal\n */\nexport async function injectConfig(\n  options: InjectOptions,\n): Promise<string | undefined> {\n  // In order to minimize the potential impact when rolling out the new config\n  // injection, we use both methods for a few releases. This allows the frontend\n  // app to be behind the backend by a version or two, but temporarily increases\n  // config injection overhead.\n  // TODO(Rugvip): After the 1.32 release we can stop calling the static injection if the HTML one is successful\n  await injectConfigIntoHtml(options);\n\n  return injectConfigIntoStatic(options);\n}\n"],"names":["injectConfigIntoHtml","injectConfigIntoStatic"],"mappings":";;;;;AAwBA,eAAsB,aACpB,OAC6B,EAAA;AAM7B,EAAA,MAAMA,0CAAqB,OAAO,CAAA,CAAA;AAElC,EAAA,OAAOC,8CAAuB,OAAO,CAAA,CAAA;AACvC;;;;"}