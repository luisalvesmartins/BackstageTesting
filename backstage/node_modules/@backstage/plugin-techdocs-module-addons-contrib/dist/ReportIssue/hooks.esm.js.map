{"version":3,"file":"hooks.esm.js","sources":["../../src/ReportIssue/hooks.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport parseGitUrl from 'git-url-parse';\n\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport {\n  replaceGithubUrlType,\n  replaceGitLabUrlType,\n} from '@backstage/integration';\nimport { scmIntegrationsApiRef } from '@backstage/integration-react';\nimport {\n  useShadowRootElements,\n  useShadowRootSelection,\n} from '@backstage/plugin-techdocs-react';\n\nimport { PAGE_EDIT_LINK_SELECTOR } from './constants';\n\nconst resolveBlobUrl = (url: string, type: string) => {\n  if (type === 'github') {\n    return replaceGithubUrlType(url, 'blob');\n  } else if (type === 'gitlab') {\n    return replaceGitLabUrlType(url, 'blob');\n  }\n  // eslint-disable-next-line no-console\n  console.error(\n    `Invalid SCM type ${type} found in ReportIssue addon for URL ${url}!`,\n  );\n  return url;\n};\n\nexport const getTitle = (selection: Selection) => {\n  const text = selection.toString().substring(0, 70);\n  const ellipsis = text.length === 70 ? '...' : '';\n  return `Documentation feedback: ${text}${ellipsis}`;\n};\n\nexport const getBody = (\n  selection: Selection,\n  markdownUrl: string,\n  appTitle: string,\n) => {\n  const title = '## Documentation Feedback 📝';\n  const subheading = '#### The highlighted text:';\n  const commentHeading = '#### The comment on the text:';\n  const commentPlaceholder = '_>replace this line with your comment<_';\n  const highlightedTextAsQuote = selection\n    .toString()\n    .trim()\n    .split('\\n')\n    .map(line => `> ${line.trim()}`)\n    .join('\\n');\n\n  const facts = [\n    `${appTitle} URL: <${window.location.href}> \\nMarkdown URL: <${markdownUrl}>`,\n  ];\n\n  return `${title}\\n\\n ${subheading} \\n\\n ${highlightedTextAsQuote}\\n\\n ${commentHeading} \\n ${commentPlaceholder}\\n\\n ___\\n${facts}`;\n};\n\nexport const useGitTemplate = (debounceTime?: number) => {\n  const initialTemplate = { title: '', body: '' };\n  const selection = useShadowRootSelection(debounceTime);\n  const [editLink] = useShadowRootElements([PAGE_EDIT_LINK_SELECTOR]);\n  const url = (editLink as HTMLAnchorElement)?.href ?? '';\n  const scmIntegrationsApi = useApi(scmIntegrationsApiRef);\n  const configApi = useApi(configApiRef);\n  const appTitle = configApi.getOptionalString('app.title') || 'Backstage';\n  if (!selection || !url) return initialTemplate;\n\n  const type = scmIntegrationsApi.byUrl(url)?.type;\n\n  if (!type) return initialTemplate;\n\n  return {\n    title: getTitle(selection),\n    body: getBody(selection, resolveBlobUrl(url, type), appTitle),\n  };\n};\n\nexport const useGitRepository = () => {\n  const scmIntegrationsApi = useApi(scmIntegrationsApiRef);\n\n  const [editLink] = useShadowRootElements([PAGE_EDIT_LINK_SELECTOR]);\n  const url = (editLink as HTMLAnchorElement)?.href ?? '';\n\n  if (!url) return null;\n\n  const type = scmIntegrationsApi.byUrl(url)?.type;\n\n  if (!type) return null;\n\n  return { ...parseGitUrl(resolveBlobUrl(url, type)), type };\n};\n"],"names":[],"mappings":"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"}