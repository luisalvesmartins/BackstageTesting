{"version":3,"file":"autocomplete.cjs.js","sources":["../../src/autocomplete/autocomplete.ts"],"sourcesContent":["/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InputError } from '@backstage/errors';\nimport { BitbucketCloudClient } from '@backstage/plugin-bitbucket-cloud-common';\n\nexport async function handleAutocompleteRequest({\n  resource,\n  token,\n  context,\n}: {\n  resource: string;\n  token: string;\n  context: Record<string, string>;\n}): Promise<{ results: { title: string }[] }> {\n  const client = BitbucketCloudClient.fromConfig({\n    host: 'bitbucket.org',\n    apiBaseUrl: 'https://api.bitbucket.org/2.0',\n    token,\n  });\n\n  switch (resource) {\n    case 'workspaces': {\n      const results: { title: string }[] = [];\n\n      for await (const page of client.listWorkspaces().iteratePages()) {\n        const slugs = [...page.values!].map(p => ({ title: p.slug! }));\n        results.push(...slugs);\n      }\n\n      return { results };\n    }\n    case 'projects': {\n      if (!context.workspace)\n        throw new InputError('Missing workspace context parameter');\n\n      const results: { title: string }[] = [];\n\n      for await (const page of client\n        .listProjectsByWorkspace(context.workspace)\n        .iteratePages()) {\n        const keys = [...page.values!].map(p => ({ title: p.key! }));\n        results.push(...keys);\n      }\n\n      return { results };\n    }\n    case 'repositories': {\n      if (!context.workspace || !context.project)\n        throw new InputError(\n          'Missing workspace and/or project context parameter',\n        );\n\n      const results: { title: string }[] = [];\n\n      for await (const page of client\n        .listRepositoriesByWorkspace(context.workspace, {\n          q: `project.key=\"${context.project}\"`,\n        })\n        .iteratePages()) {\n        const slugs = [...page.values!].map(p => ({ title: p.slug! }));\n        results.push(...slugs);\n      }\n\n      return { results };\n    }\n    case 'branches': {\n      if (!context.workspace || !context.repository)\n        throw new InputError(\n          'Missing workspace and/or repository context parameter',\n        );\n\n      const results: { title: string }[] = [];\n\n      for await (const page of client\n        .listBranchesByRepository(context.repository, context.workspace)\n        .iteratePages()) {\n        const names = [...page.values!].map(p => ({ title: p.name! }));\n        results.push(...names);\n      }\n\n      return { results };\n    }\n    default:\n      throw new InputError(`Invalid resource: ${resource}`);\n  }\n}\n"],"names":["BitbucketCloudClient","InputError"],"mappings":"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"}