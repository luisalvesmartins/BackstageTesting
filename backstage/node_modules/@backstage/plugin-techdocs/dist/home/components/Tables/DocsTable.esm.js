import React from 'react';
import useCopyToClipboard from 'react-use/esm/useCopyToClipboard';
import { useRouteRef, useApi, configApiRef } from '@backstage/core-plugin-api';
import { RELATION_OWNED_BY } from '@backstage/catalog-model';
import { getEntityRelations, humanizeEntityRef } from '@backstage/plugin-catalog-react';
import { rootDocsRouteRef } from '../../../routes.esm.js';
import { Table, EmptyState, LinkButton } from '@backstage/core-components';
import { actionFactories } from './actions.esm.js';
import { columnFactories } from './columns.esm.js';
import { toLowerMaybe } from '../../../helpers.esm.js';

const defaultColumns = [
  columnFactories.createTitleColumn({ hidden: true }),
  columnFactories.createNameColumn(),
  columnFactories.createOwnerColumn(),
  columnFactories.createKindColumn(),
  columnFactories.createTypeColumn()
];
const DocsTable = (props) => {
  const { entities, title, loading, columns, actions, options } = props;
  const [, copyToClipboard] = useCopyToClipboard();
  const getRouteToReaderPageFor = useRouteRef(rootDocsRouteRef);
  const config = useApi(configApiRef);
  if (!entities) return null;
  const documents = entities.map((entity) => {
    const ownedByRelations = getEntityRelations(entity, RELATION_OWNED_BY);
    return {
      entity,
      resolved: {
        docsUrl: getRouteToReaderPageFor({
          namespace: toLowerMaybe(
            entity.metadata.namespace ?? "default",
            config
          ),
          kind: toLowerMaybe(entity.kind, config),
          name: toLowerMaybe(entity.metadata.name, config)
        }),
        ownedByRelations,
        ownedByRelationsTitle: ownedByRelations.map((r) => humanizeEntityRef(r, { defaultKind: "group" })).join(", ")
      }
    };
  });
  const defaultActions = [
    actionFactories.createCopyDocsUrlAction(copyToClipboard)
  ];
  const pageSize = 20;
  const paging = documents && documents.length > pageSize;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, loading || documents && documents.length > 0 ? /* @__PURE__ */ React.createElement(
    Table,
    {
      isLoading: loading,
      options: {
        paging,
        pageSize,
        search: true,
        actionsColumnIndex: -1,
        ...options
      },
      data: documents,
      columns: columns || defaultColumns,
      actions: actions || defaultActions,
      title: title ? `${title} (${documents.length})` : `All (${documents.length})`
    }
  ) : /* @__PURE__ */ React.createElement(
    EmptyState,
    {
      missing: "data",
      title: "No documents to show",
      description: "Create your own document. Check out our Getting Started Information",
      action: /* @__PURE__ */ React.createElement(
        LinkButton,
        {
          color: "primary",
          to: "https://backstage.io/docs/features/techdocs/getting-started",
          variant: "contained"
        },
        "DOCS"
      )
    }
  ));
};
DocsTable.columns = columnFactories;
DocsTable.actions = actionFactories;

export { DocsTable };
//# sourceMappingURL=DocsTable.esm.js.map
