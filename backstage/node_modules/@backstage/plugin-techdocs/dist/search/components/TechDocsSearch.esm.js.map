{"version":3,"file":"TechDocsSearch.esm.js","sources":["../../../src/search/components/TechDocsSearch.tsx"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CompoundEntityRef } from '@backstage/catalog-model';\nimport { ResultHighlight } from '@backstage/plugin-search-common';\nimport {\n  SearchAutocomplete,\n  SearchContextProvider,\n  useSearch,\n} from '@backstage/plugin-search-react';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { TechDocsSearchResultListItem } from './TechDocsSearchResultListItem';\n\n/**\n * Props for {@link TechDocsSearch}\n *\n * @public\n */\nexport type TechDocsSearchProps = {\n  entityId: CompoundEntityRef;\n  entityTitle?: string;\n  debounceTime?: number;\n};\n\ntype TechDocsDoc = {\n  namespace: string;\n  kind: string;\n  name: string;\n  path: string;\n  location: string;\n  title: string;\n};\n\ntype TechDocsSearchResult = {\n  type: string;\n  document: TechDocsDoc;\n  highlight?: ResultHighlight;\n};\n\nconst isTechDocsSearchResult = (\n  option: any,\n): option is TechDocsSearchResult => {\n  return option?.document;\n};\n\nconst TechDocsSearchBar = (props: TechDocsSearchProps) => {\n  const { entityId, entityTitle, debounceTime = 150 } = props;\n  const [open, setOpen] = useState(false);\n  const navigate = useNavigate();\n  const {\n    setFilters,\n    term,\n    result: { loading, value: searchVal },\n  } = useSearch();\n  const [options, setOptions] = useState<any[]>([]);\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted && searchVal) {\n      // TODO: Change this into getting only subset of search results from the BE in the first place\n      // once pagination is implemented for search engines\n      // See: https://github.com/backstage/backstage/issues/6062\n      const searchResults = searchVal.results.slice(0, 10);\n      setOptions(searchResults);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [loading, searchVal]);\n\n  // Update the filter context when the entityId changes, e.g. when the search\n  // bar continues to be rendered, navigating between different TechDocs sites.\n  const { kind, name, namespace } = entityId;\n  useEffect(() => {\n    setFilters(prevFilters => {\n      return {\n        ...prevFilters,\n        kind,\n        namespace,\n        name,\n      };\n    });\n  }, [kind, namespace, name, setFilters]);\n\n  const handleSelection = (\n    _: any,\n    selection: TechDocsSearchResult | string | null,\n  ) => {\n    if (isTechDocsSearchResult(selection)) {\n      const { location } = selection.document;\n      navigate(location);\n    }\n  };\n\n  return (\n    <SearchAutocomplete\n      data-testid=\"techdocs-search-bar\"\n      size=\"small\"\n      open={open && Boolean(term)}\n      getOptionLabel={() => ''}\n      filterOptions={x => {\n        return x; // This is needed to get renderOption to be called after options change. Bug in material-ui?\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onChange={handleSelection}\n      blurOnSelect\n      noOptionsText=\"No results found\"\n      value={null}\n      options={options}\n      renderOption={({ document, highlight }) => (\n        <TechDocsSearchResultListItem\n          result={document}\n          lineClamp={3}\n          asListItem={false}\n          asLink={false}\n          title={document.title}\n          highlight={highlight}\n        />\n      )}\n      loading={loading}\n      inputDebounceTime={debounceTime}\n      inputPlaceholder={`Search ${entityTitle || entityId.name} docs`}\n      freeSolo={false}\n    />\n  );\n};\n\n/**\n * Component used to render search bar on TechDocs page, scoped to\n *\n * @public\n */\nexport const TechDocsSearch = (props: TechDocsSearchProps) => {\n  const initialState = {\n    term: '',\n    types: ['techdocs'],\n    pageCursor: '',\n    filters: props.entityId,\n  };\n  return (\n    <SearchContextProvider initialState={initialState}>\n      <TechDocsSearchBar {...props} />\n    </SearchContextProvider>\n  );\n};\n"],"names":[],"mappings":"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"}