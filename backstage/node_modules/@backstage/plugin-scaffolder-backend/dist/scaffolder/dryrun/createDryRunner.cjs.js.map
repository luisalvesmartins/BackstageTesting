{"version":3,"file":"createDryRunner.cjs.js","sources":["../../../src/scaffolder/dryrun/createDryRunner.ts"],"sourcesContent":["/*\n * Copyright 2022 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScmIntegrations } from '@backstage/integration';\nimport { TaskSpec } from '@backstage/plugin-scaffolder-common';\nimport { JsonObject } from '@backstage/types';\nimport { v4 as uuid } from 'uuid';\nimport { pathToFileURL } from 'url';\nimport { Logger } from 'winston';\nimport {\n  createTemplateAction,\n  TaskSecrets,\n  TemplateFilter,\n  TemplateGlobal,\n  deserializeDirectoryContents,\n  SerializedFile,\n  serializeDirectoryContents,\n} from '@backstage/plugin-scaffolder-node';\nimport { TemplateActionRegistry } from '../actions';\nimport { NunjucksWorkflowRunner } from '../tasks/NunjucksWorkflowRunner';\nimport { DecoratedActionsRegistry } from './DecoratedActionsRegistry';\nimport fs from 'fs-extra';\nimport { PermissionEvaluator } from '@backstage/plugin-permission-common';\nimport {\n  BackstageCredentials,\n  resolveSafeChildPath,\n} from '@backstage/backend-plugin-api';\nimport type { UserEntity } from '@backstage/catalog-model';\n\ninterface DryRunInput {\n  spec: TaskSpec;\n  secrets?: TaskSecrets;\n  directoryContents: SerializedFile[];\n  credentials: BackstageCredentials;\n  user?: {\n    entity?: UserEntity;\n    ref?: string;\n  };\n}\n\ninterface DryRunResult {\n  log: Array<{ body: JsonObject }>;\n  directoryContents: SerializedFile[];\n  output: JsonObject;\n}\n\n/** @internal */\nexport type TemplateTesterCreateOptions = {\n  logger: Logger;\n  integrations: ScmIntegrations;\n  actionRegistry: TemplateActionRegistry;\n  workingDirectory: string;\n  additionalTemplateFilters?: Record<string, TemplateFilter>;\n  additionalTemplateGlobals?: Record<string, TemplateGlobal>;\n  permissions?: PermissionEvaluator;\n};\n\n/**\n * Executes a dry-run of the provided template.\n *\n * The provided content will be extracted into a temporary directory\n * which is then use as the base for any relative file fetch paths.\n *\n * @internal\n */\nexport function createDryRunner(options: TemplateTesterCreateOptions) {\n  return async function dryRun(input: DryRunInput): Promise<DryRunResult> {\n    let contentPromise;\n\n    const workflowRunner = new NunjucksWorkflowRunner({\n      ...options,\n      actionRegistry: new DecoratedActionsRegistry(options.actionRegistry, [\n        createTemplateAction({\n          id: 'dry-run:extract',\n          supportsDryRun: true,\n          async handler(ctx) {\n            contentPromise = serializeDirectoryContents(ctx.workspacePath);\n            await contentPromise.catch(() => {});\n          },\n        }),\n      ]),\n    });\n\n    const dryRunId = uuid();\n    const log = new Array<{ body: JsonObject }>();\n    const contentsPath = resolveSafeChildPath(\n      options.workingDirectory,\n      `dry-run-content-${dryRunId}`,\n    );\n\n    try {\n      await deserializeDirectoryContents(contentsPath, input.directoryContents);\n\n      const abortSignal = new AbortController().signal;\n\n      const result = await workflowRunner.execute({\n        spec: {\n          ...input.spec,\n          steps: [\n            ...input.spec.steps,\n            {\n              id: dryRunId,\n              name: 'dry-run:extract',\n              action: 'dry-run:extract',\n            },\n          ],\n          templateInfo: {\n            entityRef: 'template:default/dry-run',\n            baseUrl: pathToFileURL(\n              resolveSafeChildPath(contentsPath, 'template.yaml'),\n            ).toString(),\n          },\n        },\n        secrets: input.secrets,\n        getInitiatorCredentials: () => Promise.resolve(input.credentials),\n        // No need to update this at the end of the run, so just hard-code it\n        done: false,\n        isDryRun: true,\n        getWorkspaceName: async () => `dry-run-${dryRunId}`,\n        cancelSignal: abortSignal,\n        async emitLog(message: string, logMetadata?: JsonObject) {\n          if (logMetadata?.stepId === dryRunId) {\n            return;\n          }\n          log.push({\n            body: {\n              ...logMetadata,\n              message,\n            },\n          });\n        },\n        complete: async () => {\n          throw new Error('Not implemented');\n        },\n      });\n\n      if (!contentPromise) {\n        throw new Error('Content extraction step was skipped');\n      }\n      const directoryContents = await contentPromise;\n\n      return {\n        log,\n        directoryContents,\n        output: result.output,\n      };\n    } finally {\n      await fs.remove(contentsPath);\n    }\n  };\n}\n"],"names":["NunjucksWorkflowRunner","DecoratedActionsRegistry","createTemplateAction","serializeDirectoryContents","uuid","resolveSafeChildPath","deserializeDirectoryContents","pathToFileURL","fs"],"mappings":"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"}