{"version":3,"file":"fetch.cjs.js","sources":["../../../../../src/scaffolder/actions/builtin/catalog/fetch.ts"],"sourcesContent":["/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CatalogApi } from '@backstage/catalog-client';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport { z } from 'zod';\nimport { parseEntityRef, stringifyEntityRef } from '@backstage/catalog-model';\nimport { examples } from './fetch.examples';\nimport { AuthService } from '@backstage/backend-plugin-api';\n\nconst id = 'catalog:fetch';\n\n/**\n * Returns entity or entities from the catalog by entity reference(s).\n *\n * @public\n */\nexport function createFetchCatalogEntityAction(options: {\n  catalogClient: CatalogApi;\n  auth?: AuthService;\n}) {\n  const { catalogClient, auth } = options;\n\n  return createTemplateAction({\n    id,\n    description:\n      'Returns entity or entities from the catalog by entity reference(s)',\n    examples,\n    supportsDryRun: true,\n    schema: {\n      input: z.object({\n        entityRef: z\n          .string({\n            description: 'Entity reference of the entity to get',\n          })\n          .optional(),\n        entityRefs: z\n          .array(z.string(), {\n            description: 'Entity references of the entities to get',\n          })\n          .optional(),\n        optional: z\n          .boolean({\n            description:\n              'Allow the entity or entities to optionally exist. Default: false',\n          })\n          .optional(),\n        defaultKind: z.string({ description: 'The default kind' }).optional(),\n        defaultNamespace: z\n          .string({ description: 'The default namespace' })\n          .optional(),\n      }),\n      output: z.object({\n        entity: z\n          .any({\n            description:\n              'Object containing same values used in the Entity schema. Only when used with `entityRef` parameter.',\n          })\n          .optional(),\n        entities: z\n          .array(\n            z.any({\n              description:\n                'Array containing objects with same values used in the Entity schema. Only when used with `entityRefs` parameter.',\n            }),\n          )\n          .optional(),\n      }),\n    },\n    async handler(ctx) {\n      const { entityRef, entityRefs, optional, defaultKind, defaultNamespace } =\n        ctx.input;\n      if (!entityRef && !entityRefs) {\n        if (optional) {\n          return;\n        }\n        throw new Error('Missing entity reference or references');\n      }\n\n      const { token } = (await auth?.getPluginRequestToken({\n        onBehalfOf: await ctx.getInitiatorCredentials(),\n        targetPluginId: 'catalog',\n      })) ?? { token: ctx.secrets?.backstageToken };\n\n      if (entityRef) {\n        const entity = await catalogClient.getEntityByRef(\n          stringifyEntityRef(\n            parseEntityRef(entityRef, { defaultKind, defaultNamespace }),\n          ),\n          {\n            token,\n          },\n        );\n\n        if (!entity && !optional) {\n          throw new Error(`Entity ${entityRef} not found`);\n        }\n        ctx.output('entity', entity ?? null);\n      }\n\n      if (entityRefs) {\n        const entities = await catalogClient.getEntitiesByRefs(\n          {\n            entityRefs: entityRefs.map(ref =>\n              stringifyEntityRef(\n                parseEntityRef(ref, { defaultKind, defaultNamespace }),\n              ),\n            ),\n          },\n          {\n            token,\n          },\n        );\n\n        const finalEntities = entities.items.map((e, i) => {\n          if (!e && !optional) {\n            throw new Error(`Entity ${entityRefs[i]} not found`);\n          }\n          return e ?? null;\n        });\n\n        ctx.output('entities', finalEntities);\n      }\n    },\n  });\n}\n"],"names":["createTemplateAction","examples","z","stringifyEntityRef","parseEntityRef"],"mappings":";;;;;;;AAuBA,MAAM,EAAK,GAAA,eAAA,CAAA;AAOJ,SAAS,+BAA+B,OAG5C,EAAA;AACD,EAAM,MAAA,EAAE,aAAe,EAAA,IAAA,EAAS,GAAA,OAAA,CAAA;AAEhC,EAAA,OAAOA,yCAAqB,CAAA;AAAA,IAC1B,EAAA;AAAA,IACA,WACE,EAAA,oEAAA;AAAA,cACFC,uBAAA;AAAA,IACA,cAAgB,EAAA,IAAA;AAAA,IAChB,MAAQ,EAAA;AAAA,MACN,KAAA,EAAOC,MAAE,MAAO,CAAA;AAAA,QACd,SAAA,EAAWA,MACR,MAAO,CAAA;AAAA,UACN,WAAa,EAAA,uCAAA;AAAA,SACd,EACA,QAAS,EAAA;AAAA,QACZ,UAAY,EAAAA,KAAA,CACT,KAAM,CAAAA,KAAA,CAAE,QAAU,EAAA;AAAA,UACjB,WAAa,EAAA,0CAAA;AAAA,SACd,EACA,QAAS,EAAA;AAAA,QACZ,QAAA,EAAUA,MACP,OAAQ,CAAA;AAAA,UACP,WACE,EAAA,kEAAA;AAAA,SACH,EACA,QAAS,EAAA;AAAA,QACZ,WAAA,EAAaA,MAAE,MAAO,CAAA,EAAE,aAAa,kBAAmB,EAAC,EAAE,QAAS,EAAA;AAAA,QACpE,gBAAA,EAAkBA,MACf,MAAO,CAAA,EAAE,aAAa,uBAAwB,EAAC,EAC/C,QAAS,EAAA;AAAA,OACb,CAAA;AAAA,MACD,MAAA,EAAQA,MAAE,MAAO,CAAA;AAAA,QACf,MAAA,EAAQA,MACL,GAAI,CAAA;AAAA,UACH,WACE,EAAA,qGAAA;AAAA,SACH,EACA,QAAS,EAAA;AAAA,QACZ,UAAUA,KACP,CAAA,KAAA;AAAA,UACCA,MAAE,GAAI,CAAA;AAAA,YACJ,WACE,EAAA,kHAAA;AAAA,WACH,CAAA;AAAA,UAEF,QAAS,EAAA;AAAA,OACb,CAAA;AAAA,KACH;AAAA,IACA,MAAM,QAAQ,GAAK,EAAA;AACjB,MAAA,MAAM,EAAE,SAAW,EAAA,UAAA,EAAY,UAAU,WAAa,EAAA,gBAAA,KACpD,GAAI,CAAA,KAAA,CAAA;AACN,MAAI,IAAA,CAAC,SAAa,IAAA,CAAC,UAAY,EAAA;AAC7B,QAAA,IAAI,QAAU,EAAA;AACZ,UAAA,OAAA;AAAA,SACF;AACA,QAAM,MAAA,IAAI,MAAM,wCAAwC,CAAA,CAAA;AAAA,OAC1D;AAEA,MAAA,MAAM,EAAE,KAAA,EAAW,GAAA,MAAM,MAAM,qBAAsB,CAAA;AAAA,QACnD,UAAA,EAAY,MAAM,GAAA,CAAI,uBAAwB,EAAA;AAAA,QAC9C,cAAgB,EAAA,SAAA;AAAA,OACjB,CAAM,IAAA,EAAE,KAAO,EAAA,GAAA,CAAI,SAAS,cAAe,EAAA,CAAA;AAE5C,MAAA,IAAI,SAAW,EAAA;AACb,QAAM,MAAA,MAAA,GAAS,MAAM,aAAc,CAAA,cAAA;AAAA,UACjCC,+BAAA;AAAA,YACEC,2BAAe,CAAA,SAAA,EAAW,EAAE,WAAA,EAAa,kBAAkB,CAAA;AAAA,WAC7D;AAAA,UACA;AAAA,YACE,KAAA;AAAA,WACF;AAAA,SACF,CAAA;AAEA,QAAI,IAAA,CAAC,MAAU,IAAA,CAAC,QAAU,EAAA;AACxB,UAAA,MAAM,IAAI,KAAA,CAAM,CAAU,OAAA,EAAA,SAAS,CAAY,UAAA,CAAA,CAAA,CAAA;AAAA,SACjD;AACA,QAAI,GAAA,CAAA,MAAA,CAAO,QAAU,EAAA,MAAA,IAAU,IAAI,CAAA,CAAA;AAAA,OACrC;AAEA,MAAA,IAAI,UAAY,EAAA;AACd,QAAM,MAAA,QAAA,GAAW,MAAM,aAAc,CAAA,iBAAA;AAAA,UACnC;AAAA,YACE,YAAY,UAAW,CAAA,GAAA;AAAA,cAAI,CACzB,GAAA,KAAAD,+BAAA;AAAA,gBACEC,2BAAe,CAAA,GAAA,EAAK,EAAE,WAAA,EAAa,kBAAkB,CAAA;AAAA,eACvD;AAAA,aACF;AAAA,WACF;AAAA,UACA;AAAA,YACE,KAAA;AAAA,WACF;AAAA,SACF,CAAA;AAEA,QAAA,MAAM,gBAAgB,QAAS,CAAA,KAAA,CAAM,GAAI,CAAA,CAAC,GAAG,CAAM,KAAA;AACjD,UAAI,IAAA,CAAC,CAAK,IAAA,CAAC,QAAU,EAAA;AACnB,YAAA,MAAM,IAAI,KAAM,CAAA,CAAA,OAAA,EAAU,UAAW,CAAA,CAAC,CAAC,CAAY,UAAA,CAAA,CAAA,CAAA;AAAA,WACrD;AACA,UAAA,OAAO,CAAK,IAAA,IAAA,CAAA;AAAA,SACb,CAAA,CAAA;AAED,QAAI,GAAA,CAAA,MAAA,CAAO,YAAY,aAAa,CAAA,CAAA;AAAA,OACtC;AAAA,KACF;AAAA,GACD,CAAA,CAAA;AACH;;;;"}